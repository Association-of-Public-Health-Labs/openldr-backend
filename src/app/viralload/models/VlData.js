import Sequelize from "sequelize";
import { vldata } from "../../../config/sequelize";

const VlData = vldata.define(
  "VlData",
  {
    id: { type: Sequelize.INTEGER, primaryKey: true },
    RequestID: Sequelize.STRING,
    Versionstamp: Sequelize.STRING,
    REFNO: Sequelize.STRING,
    REGISTEREDDATE: Sequelize.DATE,
    LOCATION: Sequelize.STRING,
    WARD: Sequelize.STRING,
    HOSPID: Sequelize.STRING,
    NATIONALITY: Sequelize.STRING,
    NATIONALID: Sequelize.STRING,
    UNIQUEID: Sequelize.STRING,
    SURNAME: Sequelize.STRING,
    FIRSTNAME: Sequelize.STRING,
    INITIALS: Sequelize.STRING,
    REFDRCODE: Sequelize.STRING,
    REFDR: Sequelize.STRING,
    MEDAID: Sequelize.STRING,
    MEDAIDNO: Sequelize.STRING,
    BILLACCNO: Sequelize.STRING,
    TELHOME: Sequelize.STRING,
    TELWORK: Sequelize.STRING,
    MOBILE: Sequelize.STRING,
    EMAIL: Sequelize.STRING,
    DOB: Sequelize.DATE,
    DOBType: Sequelize.STRING,
    AgeInDays: Sequelize.INTEGER,
    HL7SexCode: Sequelize.STRING,
    SpecimenDatetime: Sequelize.DATE,
    ReceivedDateTime: Sequelize.DATE,
    RegisteredDateTime: Sequelize.DATE,
    AnalysisDateTime: Sequelize.DATE,
    AuthorisedDateTime: Sequelize.DATE,
    LIMSRejectionCode: Sequelize.STRING,
    LIMSRejectionDesc: Sequelize.STRING,
    LIMSDateTimeStamp: Sequelize.DATE,
    Newborn: Sequelize.BOOLEAN,
    Pregnant: Sequelize.STRING,
    BreastFeeding: Sequelize.STRING,
    FirstTime: Sequelize.STRING,
    CollectedDate: Sequelize.STRING,
    CollectedTime: Sequelize.STRING,
    DataDeInicioDoTARV: Sequelize.STRING,
    PrimeiraLinha: Sequelize.STRING,
    SegundaLinha: Sequelize.STRING,
    ARTRegimen: Sequelize.STRING,
    TypeOfSampleCollection: Sequelize.STRING,
    LastViralLoadDate: Sequelize.STRING,
    LastViralLoadResult: Sequelize.STRING,
    RequestingClinician: Sequelize.STRING,
    LIMSVersionstamp: Sequelize.STRING,
    LOINCPanelCode: Sequelize.STRING,
    HL7PriorityCode: Sequelize.STRING,
    AdmitAttendDateTime: Sequelize.DATE,
    CollectionVolume: Sequelize.FLOAT,
    LIMSFacilityCode: Sequelize.STRING,
    LIMSFacilityName: Sequelize.STRING,
    LIMSProvinceName: Sequelize.STRING,
    LIMSDistrictName: Sequelize.STRING,
    RequestingFacilityCode: Sequelize.STRING,
    RequestingFacilityName: Sequelize.STRING,
    RequestingProvinceName: Sequelize.STRING,
    RequestingDistrictName: Sequelize.STRING,
    ReceivingFacilityCode: Sequelize.STRING,
    ReceivingFacilityName: Sequelize.STRING,
    ReceivingProvinceName: Sequelize.STRING,
    ReceivingDistrictName: Sequelize.STRING,
    TestingFacilityCode: Sequelize.STRING,
    TestingFacilityName: Sequelize.STRING,
    TestingProvinceName: Sequelize.STRING,
    TestingDistrictName: Sequelize.STRING,
    LIMSPointOfCareDesc: Sequelize.STRING,
    RequestTypeCode: Sequelize.STRING,
    ICD10ClinicalInfoCodes: Sequelize.STRING,
    ClinicalInfo: Sequelize.STRING,
    HL7SpecimenSourceCode: Sequelize.STRING,
    LIMSSpecimenSourceCode: Sequelize.STRING,
    LIMSSpecimenSourceDesc: Sequelize.STRING,
    HL7SpecimenSiteCode: Sequelize.STRING,
    LIMSSpecimenSiteCode: Sequelize.STRING,
    LIMSSpecimenSiteDesc: Sequelize.STRING,
    WorkUnits: Sequelize.FLOAT,
    CostUnits: Sequelize.FLOAT,
    HL7SectionCode: Sequelize.STRING,
    HL7ResultStatusCode: Sequelize.STRING,
    RegisteredBy: Sequelize.STRING,
    TestedBy: Sequelize.STRING,
    AuthorisedBy: Sequelize.STRING,
    OrderingNotes: Sequelize.STRING,
    EncryptedPatientID: Sequelize.STRING,
    HL7EthnicGroupCode: Sequelize.STRING,
    Deceased: Sequelize.BOOLEAN,
    HL7PatientClassCode: Sequelize.STRING,
    AttendingDoctor: Sequelize.STRING,
    ReferringRequestID: Sequelize.STRING,
    Therapy: Sequelize.STRING,
    LIMSAnalyzerCode: Sequelize.STRING,
    TargetTimeDays: Sequelize.INTEGER,
    TargetTimeMins: Sequelize.INTEGER,
    Repeated: Sequelize.STRING,
    HIVVL_AuthorisedDateTime: Sequelize.DATE,
    HIVVL_LIMSRejectionCode: Sequelize.STRING,
    HIVVL_LIMSRejectionDesc: Sequelize.STRING,
    HIVVL_VRLogValue: Sequelize.STRING,
    ViralLoadResultCategory: Sequelize.STRING,
    HIVVL_ViralLoadResult: Sequelize.STRING,
    HIVVL_ViralLoadCAPCTM: Sequelize.STRING,
    AgeGroup: Sequelize.STRING,
    AgeInYears: Sequelize.INTEGER,
    ReasonForTest: Sequelize.STRING,
    RegisteredYearAndQuarter: Sequelize.STRING,
    RegisteredYearAndMonth: Sequelize.STRING,
    DateTimeStamp: Sequelize.DATE,
    HealthCareID: Sequelize.STRING,
    FullFacilityCode: Sequelize.STRING
  },
  { freezeTableName: true, timestamps: false }
);

vldata.sync();
module.exports = VlData;
